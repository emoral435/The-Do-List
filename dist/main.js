(()=>{"use strict";const e=e=>({projectName:e,tasks:[]}),t=function(e="none",t="",n=""){let o,l=document.createElement("div");if(""!=e){o=e.split(" ");for(let e=0;e<o.length;e++)l.classList.add(o[e])}return null!=t&&(l.id=t),null!=n&&(l.textContent=n),l},n=function(e="",t="",n=""){let o=e.split(" "),l=document.createElement("button");if(""!=e)for(let e=0;e<o.length;e++)l.classList.add(o[e]);return l.id=t,l.textContent=n,l},o=function(e){let t="h-6 w-6 cursor-pointer hover:-translate-y-1 hover:scale-110 transition ease-in-out duration-300".split(" "),n=document.createElement("img");n.src="/src/modules/edit.svg",n.dataset.modalTarget="#"+e+"otherModal";for(let e=0;e<t.length;e++)n.classList.add(t[e]);return n},l=function(e){let t="min-h-[20px] min-w-[20px] inline-block bg-white border-red-500 border-[3px] rounded-[50%] hover:bg-slate-300 mx-3".split(" "),n=document.createElement("span");for(let e=0;e<t.length;e++)n.classList.add(t[e]);return n.dataset.id=e,n},r=function(e){let t="h-[2px] bg-slate-700 w-[12px] block".split(" "),n=document.createElement("span");for(let e=0;e<t.length;e++)n.classList.add(t[e]);return e?n.classList.add("translate-y-[2px]"):n.classList.add("rotate-[90deg]"),n},a=function(e){let t=document.createElement("img");t.src="/src/modules/trash.svg",t.dataset.id=e;let n="h-6 w-6 cursor-pointer trash hover:-translate-y-1 hover:scale-110 transition ease-in-out duration-300".split(" ");for(let e=0;e<n.length;e++)t.classList.add(n[e]);return t},d=function(e){let t=e+"form",n=document.createElement("form");return n.setAttribute("id",t),n.setAttribute("action",""),n},c=function(e,t){let n=e+t,o=document.createElement("label");return o.setAttribute("for",n),o.textContent=t[0].toUpperCase()+t.slice(1,t.length)+":",o},s=function(e,t,n,o){let l=o.split(" "),r=document.createElement("input");for(let e=0;e<l.length;e++)r.classList.add(l[e]);let a=t+n;return r.setAttribute("type",e),r.setAttribute("id",a),"text"===e&&r.setAttribute("required",""),r},i=function(e,t){let n=t.split(" "),o=document.createElement("textarea");o.setAttribute("required","");for(let e=0;e<n.length;e++)o.classList.add(n[e]);return o.cols="5",o.rows="5",o},u=function(e,t){let n=t.split(" "),o=document.createElement("select"),l=e+"priority";o.setAttribute("id",l);for(let e=0;e<n.length;e++)o.classList.add(n[e]);let r=document.createElement("option");r.value="0",r.textContent="None";let a=document.createElement("option");a.value="1",a.textContent="Low";let d=document.createElement("option");d.value="2",d.textContent="Medium";let c=document.createElement("option");return c.value="3",c.textContent="High",o.append(r,a,d,c),o};function m(e){let t=0;for(let n=0;n<y.nameArray.length;n++)y.nameArray[n]==e&&(t=n);return t}const p=(()=>{function e(e){null!=e&&(e.classList.remove("active"),overlay.classList.remove("active"))}return{taskModal:o=>{let l=t("modal",o+"Modal"),r=t("modal-header"),a=n("close-button","","");a.innerHTML="&times;",a.dataset.closeButton,a.addEventListener("click",(()=>{e(a.closest(".modal"))})),r.append(t("title","","Task Details"),a),l.append(r);let d,c=t("modal-body"),s=document.getElementById("title").textContent;for(let e=0;e<y.nameArray.length;e++)y.nameArray[e]==s&&(d=e,console.log("running"));return c.append(t("","","Title: "+s)),c.append(t("","","Description: "+y.projectArray[d].tasks[o].desc)),c.append(t("","","Due Date: "+y.projectArray[d].tasks[o].date)),c.append(t("","","Priority: "+y.projectArray[d].tasks[o].priority)),l.append(c),l},editModal:o=>{let l=t("modal",o+"otherModal"),a=t("modal-header"),p=n("close-button");p.innerHTML="&times;",p.dataset.closeButton,p.addEventListener("click",(()=>{e(p.closest(".modal"))})),a.append(t("title","","Edit Task"),p),l.append(a);let g=t("modal-body"),f=d(o),v=t("flex flex-col gap-2"),h=t("flex flex-col"),b=c(o,"objective"),E=s("text",o,"objective","bg-white border-[1px] border-black h-[2em] focus:border-[2px] focus:border-[#2994b2] focus:outline-none");h.append(b,E),v.append(h);let x=t("flex flex-col"),k=c(o,"description"),j=i(o,"bg-white border-[1px] border-black focus:border-[2px] focus:border-[#2994b2] focus:outline-none");x.append(k,j),v.append(x);let L=t("flex justify-around"),A=t("flex justify-start gap-12"),I=t("flex flex-col"),B=c(o,"priority"),w=u(o,"bg-white border-[1px] border-black h-7 focus:border-[2px] focus:border-[#2994b2] focus:outline-none");I.append(B,w),A.append(I);let T=t("flex flex-col"),C=c(o,"date"),S=s("date",o,"date","bg-white border-[1px] border-black focus:border-[2px] focus:border-[#2994b2] focus:outline-none");T.append(C,S),A.append(T),L.append(A);let M=n("flex text-xl my-2 items-center");M.setAttribute("type","submit"),M.setAttribute("form","taskForm");let q=m(document.getElementById("title").innerHTML);M.addEventListener("click",(()=>{let e=o+"objective",t=o+"desc",n=o+"priority",l=o+"date",r=document.getElementById(e).value,a=document.getElementById(t).value,d=document.getElementById(n).value,c=document.getElementById(l).value;y.projectArray[q].tasks.push(makeTask(r,a,d,c)),y.projectArray[0].tasks.push(makeTask(r,a,d,c)),document.getElementById(e).value="",document.getElementById(t).value="",document.getElementById(n).value="0",document.getElementById(l).value="",storage.updateProjectInfo(y)}));let N=t("mx-2 relative"),P=r(!0),D=r(!1),H=t("","","Add");return N.append(P,D),M.append(N,H),L.append(M),v.append(L),f.append(v),g.append(f),l.append(g),l}}})(),g=(e,r)=>{let d=t(),c=t("rounded-[10px] flex justify-between hover:bg-[#cccccc] min-h-[3rem] items-center hover:relative hover:bottom-1 hover:shadow-xl flex-col lg:flex-row py-2"),s=t("flex items-start justify-start lg:justify-start lg:items-center w-full"),i=l(e);i.addEventListener("click",void console.log("work in progress, will either use closest or see the title id contents! and delete from the project directory and well as the inbox directory"));let u=t("","","Task Details");s.append(i,u),c.append(s);let m=t("flex gap-6 mr-8"),g=t(),f=n("hover:-translate-y-1 hover:scale-110 transition ease-in-out duration-300","","Details");f.dataset.modalTarget="#"+e+"Modal",f.addEventListener("click",(()=>{var e;null!=(e=document.querySelector(f.dataset.modalTarget))&&(e.classList.add("active"),overlay.classList.add("active"))}));let y=p.taskModal(e);g.append(f,y),m.append(g);let v=o(e);v.addEventListener("click",(()=>{var e;null!=(e=document.querySelector(v.dataset.modalTarget))&&(e.classList.remove("active"),overlay.classList.remove("active"))}));let h=p.editModal(e);m.append(v,h);let b=a(e);return m.append(b),c.append(m),d.append(c),d},f=(()=>{const e=e=>{localStorage.setItem("projectInfo",JSON.stringify(e))},t=()=>JSON.parse(localStorage.getItem("projectInfo"));return{updateProjectInfo:e,getProjectItem:t,initialize:()=>{let n=t();e(n),t().projectArray[0].tasks.length}}})(),y=(()=>{const t=[],n=[];return document.querySelectorAll("[data-project-name]").forEach((o=>{t.push(o.dataset.projectName);let l=e(o.dataset.projectName);n.push(l)})),{nameArray:t,projectArray:n}})();function v(e){e.forEach((e=>{let t=e.cloneNode(!0);e.parentNode.replaceChild(t,e)}))}const h=(e,t,n,o)=>({objective:e,desc:t,priority:n,date:o}),b=(()=>{const t=()=>{let e=document.querySelectorAll(".directory");for(let t=0;t<e.length;t++)e[t].addEventListener("click",(()=>{e.forEach((e=>{e.classList.contains("toggled")&&e.classList.remove("toggled")}));const n=document.getElementById("title");let o,l=e[t].childNodes;o=l.length>3?l[3].textContent:l[1].textContent,e[t].classList.add("toggled"),n.textContent=o}))};return{buttonChange:t,navToggle:()=>{const e=document.getElementsByClassName("toggle-button")[0],t=document.getElementById("nav"),n=document.getElementById("main");e.addEventListener("click",(()=>{t.classList.toggle("active"),n.classList.toggle("active")}))},activateModals:()=>{const e=document.querySelectorAll("[data-modal-target"),t=document.querySelectorAll("[data-close-button]"),n=document.getElementById("overlay");function o(e){null!=e&&(e.classList.remove("active"),n.classList.remove("active"))}e.forEach((e=>{e.addEventListener("click",(()=>{var t;null!=(t=document.querySelector(e.dataset.modalTarget))&&(t.classList.add("active"),n.classList.add("active"))}))})),n.addEventListener("click",(()=>{document.querySelectorAll(".modal-active").foreEach((e=>{o(e)}))})),t.forEach((e=>{e.addEventListener("click",(()=>{o(e.closest(".modal"))}))}))},addProject:()=>{document.getElementById("addProject").addEventListener("click",(n=>{n.preventDefault(),function(){const n=document.getElementById("name").value;document.getElementById("name").value="";let o=0,l=0;for(;o<y.nameArray.length;){if(y.nameArray[o]===n){l++;break}o++}if(0==l){let o=e(n);y.projectArray.push(o),y.nameArray.push(n),f.updateProjectInfo(y);const l=document.getElementById("additionalProjects"),r=function(e){const t=document.createElement("button");for(let n=0;n<e.length;n++)t.classList.add(e[n]);return t}(["hover:bg-[#cccccc]","rounded-md","w-full","py-2","flex","justify-between","items-center","h-12","px-1","directory"]),a=function(e){const t=new Image(20,20);t.src="/src/modules/project-image.png";for(let n=0;n<e.length;n++)t.classList.add(e[n]);return t}(["h-[1.3rem]","w-[1.3rem]","flex","justify-start","items-center","mx-4","box-content"]),d=function(e){const t=document.createElement("div");return t.textContent=e,t.dataset.projectName=e,t.dataset.id=y.nameArray.length-1,t}(n),c=function(e){const t=document.createElement("div");t.innerHTML="&times;";for(let n=0;n<e.length;n++)t.classList.add(e[n]);return t}(["ml-4","z-10","flex","justify-end","killbill"]);r.append(a),r.append(d),r.append(c),l.insertBefore(r,document.getElementById("addBefore")),v(document.querySelectorAll(".directory")),t(),v(document.querySelectorAll(".killbill")),document.querySelectorAll(".killbill").forEach((e=>{e.addEventListener("click",(()=>{let t=e.previousElementSibling.dataset.id;y.nameArray.splice(t,1),y.projectArray.splice(t,1),f.updateProjectInfo(y),e.parentElement.remove()}))}))}}()}))},addTask:()=>{document.getElementById("addTask").addEventListener("click",(e=>{e.preventDefault(),function(){const e=document.getElementById("title");console.log(e);let t=m(e.innerHTML);console.log(y.projectArray[t].tasks.length),console.log(y.projectArray[t].tasks),console.log("clicked");let n=document.getElementById("objective").value,o=document.getElementById("description").value,l=document.getElementById("priority").value,r=document.getElementById("date").value;"Index"!=e.textContent?(console.log(e.textContent),y.projectArray[0].tasks.push(h(n,o,l,r)),y.projectArray[t].tasks.push(h(n,o,l,r))):y.projectArray[0].tasks.push(h(n,o,l,r)),document.getElementById("objective").value="",document.getElementById("description").value="",document.getElementById("priority").value="0",document.getElementById("date").value="";let a=y.projectArray[t].tasks.length-1;console.log(a),console.log(y.projectArray[t].tasks.length),console.log(y.projectArray[t].tasks);let d=g(a);f.updateProjectInfo(y),document.getElementById("content").insertBefore(d,document.getElementById("taskButton"))}()}))}}})();console.log({testString:"This is working, along with Tailwind!"}),b.buttonChange(),b.navToggle(),b.activateModals(),f.initialize(),b.addProject(),b.addTask()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,